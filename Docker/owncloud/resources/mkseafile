#!/bin/bash
#

server=$1

docker stop $server >/dev/null 2>&1
docker rm $server >/dev/null 2>&1
rm -rf /etc/nginx/tmp_certs/$server

storage=/objectStorage/$server
mkdir -p $storage
chcon -Rt svirt_sandbox_file_t $storage


docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=jeyb-fu-hen-ayn- -e MYSQL_DATABASE=seafile --name $server-db orchardup/mysql

docker run -it \
	--dns=127.0.0.1 \
	-h $server \
	--link $server-db:db \
	--name $server-data \
	-v "$storage:/objectStorage:rw" \
	-e VIRTUAL_HOST=${server}.cloudwalker.no \
	-e SEAFILE_DOMAIN_PORT=443 \
	-e SEAFILE_DOMAIN_NAME=cloudwalker.no \
	raghon/seafile /usr/local/sbin/bootstrap

sleep 5

docker run -d -t --dns=127.0.0.1 -p 0.0.0.0:10001:10001 -p 0.0.0.0:8082:8082 -p 0.0.0.0:12001:12001 -p 0.0.0.0:443:443 --volumes-from $server-data --link $server-db:db \
	-e VIRTUAL_HOST=$server \
	-e SEAFILE_DOMAIN_PORT=443 \
	-v "$storage:/objectStorage:rw" \
	-e SEAFILE_DOMAIN_NAME=cloudwalker.no --name $server raghon/seafile

read ffe
ok=false
#while [ $ok == "false" ] ; do
#	ok=true	
#	docker cp $server:/etc/nginx/certs/seafile.crt /etc/nginx/tmp_certs/$server || ok=false
#	docker cp $server:/etc/nginx/certs/seafile.key /etc/nginx/tmp_certs/$server || ok=false
#done

#jcp /etc/nginx/tmp_certs/$server/seafile.key /etc/nginx/certs/
#cp /etc/nginx/tmp_certs/$server/seafile.crt /etc/nginx/certs/

# Check if proxy is running:
proxy_running=$(docker inspect --format='{{.State.Running}}' proxy)
echo $proxy_running
if [ "${proxy_running}" != "true" ] ; then
	docker rm proxy
	docker run  -d --name proxy -h proxy --security-opt=label:type:docker_t -p 8080:8080 -p 80:80 -p 443:443 -v /etc/nginx/certs:/etc/nginx/certs -v /var/run/docker.sock:/tmp/docker.sock jwilder/nginx-proxy
fi
